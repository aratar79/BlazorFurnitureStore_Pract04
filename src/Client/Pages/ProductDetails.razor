@inject IProductCategoryService ProductCategoryService
@inject IProductService ProductService

@*<MudDialog>
    <TitleContent>
        Product Details
    </TitleContent>
    <DialogContent>
        <EditForm Model="@Product">
            <MudCard>
                <MudCardContent>
                    <div class="container">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label>Category</label>
                                <InputSelect class="form-control col-sm-5"
                                             Value="@Product.ProductCategoryId"
                                             ValueChanged="@((int productCategoryId) => ProductCategoryHasChange(productCategoryId))"
                                             ValueExpression="@(()=>Product.ProductCategoryId)">
                                    @foreach (var item in productCategories)
                                    {
                                        <option value="@item.Id">@item.Name</option>
                                    }
                                </InputSelect>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label>Product</label>
                                <InputSelect class="form-control col-sm-5" @bind-Value="@Product.Id">
                                    @foreach (var item in products)
                                    {
                                        <option value="@item.Id">@item.Name</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label>Price</label>
                                <InputText class="form-control" disable="true" @bind-Value="@Product.Price.ToString("#.##")" />
                            </div>
                            <div class="col-md-6 mb-3">
                                <label>Quantity</label>
                                <InputNumber class="form-control" @bind-Value="@Product.Quantity" />
                            </div>
                        </div>
                    </div>
                </MudCardContent>
            </MudCard>
        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="AddProduct">Add</MudButton>
    </DialogActions>
</MudDialog>*@

<MudDialog>
    <TitleContent>
        Product Details
    </TitleContent>
    <DialogContent>
        <EditForm Model="@Product">
            <div class="card">
                <div class="card-body">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="">Category</label>
                                <InputSelect class="form-control"
                                             Value="@Product.ProductCategoryId"
                                             ValueChanged="@((int productCategoryId) => ProductCategoryHasChanged(productCategoryId))"
                                             ValueExpression="@(() => Product.ProductCategoryId)">
                                    @foreach (var item in productCategories)
                                    {
                                        <option value="@item.Id">@item.Name</option>
                                    }
                                </InputSelect>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="">Product</label>
                                <InputSelect class="form-control" @bind-Value="@Product.Id">
                                    @foreach (var item in products)
                                    {
                                        <option value="@item.Id">@item.Name</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">                                
                                <MudNumericField Disabled="true" Label="Price" @bind-Value="@Product.Price" Variant="Variant.Outlined" />
                            </div>
                            <div class="col-md-6 mb-3">                                
                                <MudNumericField @bind-Value="@Product.Quantity" Label="Quantity" Variant="Variant.Outlined" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="AddProduct">Add</MudButton>
    </DialogActions>
</MudDialog>

@code {

    public Product Product = new Product();
    public IEnumerable<ProductCategory> productCategories = new List<ProductCategory>();
    public IEnumerable<Product> products = new List<Product>();
    public string Message { get; set; }

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            productCategories = await ProductCategoryService.GetAll();
            await LoadProducts(Product.ProductCategoryId);
        }
        catch (Exception e)
        {

            Message = "Error...." + e.Message;
        }
    }

    protected async Task ProductCategoryHasChanged(int productCategoryId)
    {
        Product.ProductCategoryId = productCategoryId;
        if (Product.ProductCategoryId > 0)
            await LoadProducts(Product.ProductCategoryId);

    }

    private async Task LoadProducts(int productCategoryId)
    {
        var result = await ProductService.GetByCategory(productCategoryId);
        products = result;
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void AddProduct()
    {
        MudDialog.Close(DialogResult.Ok(Product));
    }

}
